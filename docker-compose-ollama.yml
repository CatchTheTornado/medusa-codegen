services:
  app:
    image: node:21
    working_dir: /var/app
    depends_on:
      - ollama
    env_file: docker/medusa-codegen/default.env
    tty: true # to emulate terminal for unquirer to be used
    stdin_open: true
    environment:
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      LLM_PROVIDER: openai
      MEDUSA_BACKEND_URL: ${MEDUSA_BACKEND_URL}      
    volumes:
      - './node_modules:/var/app/node_modules'
      - './package.json:/var/app/package.json'
      - './nodemon.json:/var/app/nodemon.json'
      - './tsconfig.json:/var/app/tsconfig.json'
      - './sample-parameters.json:/var/app/sample-parameters.json'
      - './generated:/var/app/generated'
      - './input:/var/app/input'
      - './src:/var/app/src'
    tmpfs:
      - /var/dist
    expose:
      - '8080'
    ports:
      - '8080:8080'
    command: bash -c "npm --no-warnings install && npm run ollama-setup"
    networks:
      - ollama-docker

  db:
    image: postgres:13
    container_name: db
    ports:
      - 5432:5432
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret
    restart: always
    networks:
      - ollama-docker

  medusa:
    build:
      context: .
      dockerfile: ./docker/medusa/Dockerfile
    container_name: medusa
    ports:
      - 9000:9000
    working_dir: /var/medusa
    volumes:
      - ./medusa/my-medusa-store:/var/medusa
    depends_on:
      - db
    restart: always
    networks:
      - ollama-docker


  ollama:
    image: ollama/ollama:latest
    ports:
      - 11434:11434
    volumes:
      - .:/code
      - ./ollama/ollama:/root/.ollama
    container_name: ollama
    pull_policy: always
    tty: true
    restart: always
    networks:
      - ollama-docker

  ollama-webui:
    image: ghcr.io/ollama-webui/ollama-webui:main
    container_name: ollama-webui
    tty: true
    volumes:
      - ./ollama/ollama-webui:/app/backend/data
    depends_on:
      - ollama
    ports:
      - 8081:8081
    environment:
      - '/ollama/api=http://ollama:11434/api'
    extra_hosts:
      - host.docker.internal:host-gateway
    restart: unless-stopped
    networks:
      - ollama-docker

networks:
  ollama-docker:
    external: false
  